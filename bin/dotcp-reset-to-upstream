#!/bin/sh

# Force-reset each machine branch to upstream's state.

set -eu

master_branch=master
current_branch=$(git branch --show-current)
all_branches=$(git branch --format='%(refname:short)')
echo "current_branch: $current_branch"

for branch in $all_branches; do
    base_branch="base-$branch"
    upstream_branch=origin/$branch

    # Skip all branches which are not a base branch. Also only continue when
    # base branch exists.
    [ "$branch" = "$master_branch" ] && continue
    [ "$branch" = "$base_branch" ] && continue
    (echo "$all_branches" | grep -q $base_branch) || continue

    echo "branch=$branch"
    echo "  base_branch=$base_branch"
    echo "    force-reset $branch to $upstream_branch ..."
    git checkout $branch

    # Make sure checkout worked. If grep fails, then "set -e" above will kill
    # the script.
    git rev-parse --abbrev-ref HEAD | grep -q $branch

    if git branch --no-color -r | grep -E "${upstream_branch}$"; then
        git reset --hard $upstream_branch
    else
        echo "local-only branch: $branch"
    fi
done

git checkout $current_branch
